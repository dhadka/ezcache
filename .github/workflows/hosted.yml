name: Hosted Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm install
      - run: npm run build
      - run: npm test
      - name: Ensure dist/ folder is up-to-date
        if: ${{ runner.os == 'Linux' }}
        shell: bash
        run: |
          if [ "$(git diff --ignore-space-at-eol | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi

  test-nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: nuget install Newtonsoft.Json
      - name: Cache nuget
        uses: ./
        with:
          type: nuget
          version: v1

  test-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache per run
        uses: ./
        with:
          type: run
          path: ~/.npm
      - name: Install dependencies
        run: npm ci

  save-diff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache diff
        uses: ./
        with:
          type: diff
          path: cache
          version: ${{ github.run_id }}
      - name: Create cache content
        run: |
          mkdir cache
          echo "v1" > cache/version.txt

  update-diff:
    needs: save-diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache diff
        id: cache
        uses: ./
        with:
          type: diff
          path: cache
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-restore-type == 'miss'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Change version
        run: |
          echo "v2" > cache/version.txt 

  verify-diff:
    needs: update-diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache diff
        id: cache
        uses: ./
        with:
          type: diff
          path: cache
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-restore-type == 'miss'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Verify cache updated
        run: |
          if [[ "$(cat cache/version.txt)" != "v2" ]]; then
            echo "Version was not updated!"
            exit -1
          fi

  save-auto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Auto cache
        uses: ./
        with:
          type: auto
          verson: ${{ github.run_id }}
      - name: Install dependencies
        run: npm ci

  test-daily:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Daily cache
        uses: ./
        with:
          type: daily
          path: nodejs
      - name: Checkout node source code
        uses: actions/checkout@v2
        with:
          repository: nodejs/node
          path: nodejs

  save-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Write cache content
        run: |
          mkdir cache
          echo "v1" > cache/version.txt
      - name: Env cache
        uses: ./
        with:
          type: env
          path: cache
          version: ${{ github.run_id }}

  restore-env:
    needs: save-env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Env cache
        id: cache
        uses: ./
        with:
          type: env
          path: cache
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-restore-type == 'miss'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Change version but do not update
        run: |
          echo "v2" > cache/version.txt

  update-env:
    needs: restore-env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Env cache
        id: cache
        uses: ./
        with:
          type: env
          path: cache
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-restore-type == 'miss'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Verify version not changed
        run: |
          if [[ "$(cat cache/version.txt)" != "v1" ]]; then
            echo "Version changed!"
            exit -1
          fi
      - name: Change version and update cache
        run: |
          echo "v2" > cache/version.txt
          echo "UPDATE_CACHE=true" >> $GITHUB_ENV

  verify-env:
    needs: update-env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Env cache
        id: cache
        uses: ./
        with:
          type: env
          path: cache
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-restore-type == 'miss'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Verify cache updated
        run: |
          if [[ "$(cat cache/version.txt)" != "v2" ]]; then
            echo "Version was not updated!"
            exit -1
          fi

  test-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache .local
        uses: ./
        with:
          type: diff
          path: ~/.local
      - name: Add .local to PATH
        run: |
          mkdir -p "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Setup .local binaries
        run: |
          set -e
          INSTALLED_VERSION=""

          if command -v pup; then
            INSTALLED_VERSION="v$(pup --version)"
          fi
          
          LATEST_URL=$(curl -s https://api.github.com/repos/ericchiang/pup/releases/latest | jq -r ".assets | .[] | .browser_download_url" | grep "linux_amd64" | head -1)
          LATEST_VERSION=$(echo $LATEST_URL | cut -d '/' -f 8)

          if [[ INSTALLED_VERSION != LATEST_VERSION ]]; then
            wget -q -t5 -O "pup_latest.zip" "$LATEST_URL"
            unzip -d "$HOME/.local/bin" "pup_latest.zip"
            rm "pup_latest.zip"
            echo "UPDATE_CACHE=true" >> $GITHUB_ENV
          fi

  save-powershell:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache powershell
        uses: ./
        with:
          type: powershell
          modules: SqlServer, PSScriptAnalyzer
          version: ${{ github.run_id }}
          
  restore-powershell:
    needs: save-powershell
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache powershell
        id: cache
        uses: ./
        with:
          type: powershell
          modules: SqlServer, PSScriptAnalyzer
          version: ${{ github.run_id }}
      - name: Verify restore
        shell: pwsh
        if: steps.cache.outputs.cache-hit != 'true'
        run: Write-Error "Restore failed!"
      - name: Show installed modules
        shell: pwsh
        run: ls ~\Documents\WindowsPowerShell\Modules
    
  save-script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup install script
        run: |
          echo -e "#/bin/bash\nnpm install @actions/cache\necho 'Install finished!'" > install.sh
          chmod +x install.sh
      - name: Cache script
        uses: ./
        with:
          type: script
          script: install.sh
          path: ~/.npm
          version: ${{ github.run_id }}
          
  restore-script:
    needs: save-script
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup install script
        run: |
          echo -e "#/bin/bash\nnpm install @actions/cache\necho 'Install finished!'" > install.sh
          chmod +x install.sh
      - name: Cache script
        id: cache
        uses: ./
        with:
          type: script
          script: install.sh
          path: ~/.npm
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Restore failed!"
          exit -1
          
  save:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - type: pip
            repo: Project-Platypus/Platypus
            script: pip install -r requirements.txt
          - type: maven
            repo: mkyong/maven-examples
            script: |
              cd java-project
              mvn package
          - type: gradle
            repo: pkainulainen/gradle-examples
            script: |
              cd dependency-management
              gradle clean build
          - type: npm
            repo: contentful/the-example-app.nodejs
            script: npm ci
          - type: yarn
            repo: yarnpkg/example-yarn-package
            script: yarn install
          - type: cargo
            repo: AtheMathmo/rusty-machine
            script: cargo build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ matrix.repo }}
          path: dev
      - name: Cache ${{ matrix.type }}
        uses: ./
        with:
          type: ${{ matrix.type }}
          version: ${{ github.run_id }}
      - name: Run script
        run: |
          cd dev
          ${{ matrix.script }}
          
  restore:
    needs: save
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - type: pip
            repo: Project-Platypus/Platypus
            script: pip install -r requirements.txt
          - type: maven
            repo: mkyong/maven-examples
            script: |
              cd java-project
              mvn package
          - type: gradle
            repo: pkainulainen/gradle-examples
            script: |
              cd dependency-management
              gradle clean build
          - type: npm
            repo: contentful/the-example-app.nodejs
            script: npm ci
          - type: yarn
            repo: yarnpkg/example-yarn-package
            script: yarn install
          - type: cargo
            repo: AtheMathmo/rusty-machine
            script: cargo build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ matrix.repo }}
          path: dev
      - name: Cache ${{ matrix.type }}
        id: cache
        uses: ./
        with:
          type: ${{ matrix.type }}
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Run script
        run: |
          cd dev
          ${{ matrix.script }}
        
