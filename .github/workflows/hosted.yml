name: Hosted Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  #build:
    #runs-on: ubuntu-latest
    #steps:
    #  - uses: actions/checkout@v2
    #  - run: npm install
    #  - run: npm run build
    #  - run: npm test
    #  - run: npm run lint

  test-nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: nuget install Newtonsoft.Json
      - name: Cache nuget
        uses: ./
        with:
          type: nuget
          version: v1

  test-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache npm
        uses: ./
        with:
          type: npm
          version: v1
      - name: Install dependencies
        run: npm ci

  test-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache per run
        uses: ./
        with:
          type: run
          path: ~/.npm
      - name: Install dependencies
        run: npm ci

  test-diff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache by diff
        uses: ./
        with:
          type: diff
          path: ~/.npm
          version: v2
      - name: Install dependencies
        run: npm ci

  test-auto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Auto cache
        uses: ./
        with:
          type: auto
      - name: Install dependencies
        run: npm ci

  test-daily:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Daily cache
        uses: ./
        with:
          type: daily
          path: nodejs
      - name: Checkout node source code
        uses: actions/checkout@v2
        with:
          repository: nodejs/node
          path: nodejs

  test-env-create-or-update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Env cache
        uses: ./
        with:
          type: env
          path: ~/.npm
      - name: Install dependencies
        run: |
          npm ci
          echo "UPDATE_CACHE=true" >> $GITHUB_ENV

  test-env-no-update:
    needs: test-env-create-or-update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Env cache
        uses: ./
        with:
          type: env
          path: ~/.npm
      - name: Install dependencies
        run: |
          npm ci
          
  save:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - type: pip
            repo: Project-Platypus/Platypus
            script: pip install -r requirements.txt
          - type: maven
            repo: mkyong/maven-examples
            script: |
              cd java-project
              mvn package
          - type: gradle
            repo: pkainulainen/gradle-examples
            script: |
              cd dependency-management
              gradle clean build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ matrix.repo }}
          path: dev
      - name: Cache ${{ matrix.type }}
        uses: ./
        with:
          type: ${{ matrix.type }}
          version: ${{ github.run_id }}
      - name: Run script
        run: |
          cd dev
          ${{ matrix.script }}
          
  restore:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - type: pip
            repo: Project-Platypus/Platypus
            script: pip install -r requirements.txt
          - type: maven
            repo: mkyong/maven-examples
            script: |
              cd java-project
              mvn package
          - type: gradle
            repo: pkainulainen/gradle-examples
            script: |
              cd dependency-management
              gradle clean build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ matrix.repo }}
          path: dev
      - name: Cache ${{ matrix.type }}
        uses: ./
        with:
          type: ${{ matrix.type }}
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Run script
        run: |
          cd dev
          ${{ matrix.script }}
          
  # ==================================================
  # Maven Tests
  # ==================================================
          
  save-maven-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: mkyong/maven-examples
          path: maven-examples
      - name: Cache maven
        uses: ./
        with:
          type: maven
          version: ${{ github.run_id }}
      - name: Compile
        run: |
          cd maven-examples/java-project
          mvn package
          
  restore-maven-cache:
    runs-on: ubuntu-latest
    needs: save-maven-cache
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: mkyong/maven-examples
          path: maven-examples
      - name: Cache maven
        id: cache
        uses: ./
        with:
          type: maven
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Compile
        run: |
          cd maven-examples/java-project
          mvn package
          
  # ==================================================
  # Gradle Tests
  # ==================================================
          
  save-gradle-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: pkainulainen/gradle-examples
          path: gradle-examples
      - name: Cache gradle
        uses: ./
        with:
          type: gradle
          version: ${{ github.run_id }}
      - name: Compile
        run: |
          cd gradle-examples/dependency-management
          gradle clean build
          
  restore-gradle-cache:
    runs-on: ubuntu-latest
    needs: save-gradle-cache
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: pkainulainen/gradle-examples
          path: gradle-examples
      - name: Cache gradle
        id: cache
        uses: ./
        with:
          type: gradle
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Compile
        run: |
          cd gradle-examples/dependency-management
          gradle clean build
          
  # ==================================================
  # Pip Tests
  # ==================================================
          
  save-pip-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: Project-Platypus/Platypus
          path: python-example
      - name: Cache pip
        uses: ./
        with:
          type: pip
          version: ${{ github.run_id }}
      - name: Compile
        run: |
          cd python-example
          pip install -r requirements.txt
          
  restore-pip-cache:
    runs-on: ubuntu-latest
    needs: save-pip-cache
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: Project-Platypus/Platypus
          path: python-example
      - name: Cache pip
        id: cache
        uses: ./
        with:
          type: pip
          version: ${{ github.run_id }}
      - name: Verify restore
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Compile
        run: |
          cd python-example
          pip install -r requirements.txt
