name: AWS Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  save-aws-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache npm
        uses: ./
        with:
          type: npm
          version: ${{ github.run_id }}
          provider: aws
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          AWS_REGION: us-east-1
      - name: Install dependencies
        run: |
          npm ci

  restore-aws-cache:
    runs-on: ubuntu-latest
    needs: save-aws-cache
    steps:
      - uses: actions/checkout@v2
      - name: Cache npm
        id: cache
        uses: ./
        with:
          type: npm
          version: ${{ github.run_id }}
          provider: aws
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          AWS_REGION: us-east-1
      - name: Verify restore worked
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Restore failed!"
          exit -1
      - name: Install dependencies
        run: |
          npm ci

  save-minio-cache:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Start docker container
        run: |
          docker pull minio/minio:latest
          docker run -d --name minio -p 9000:9000 -e "MINIO_ROOT_USER=${{ secrets.MINIO_ACCESS_KEY }}" -e "MINIO_ROOT_PASSWORD=${{ secrets.MINIO_SECRET_KEY }}" -v $HOME/data:/data minio/minio:latest server /data
          sleep 1
      - name: Cache npm
        uses: ./
        with:
          type: npm
          version: ${{ github.run_id }}
          provider: s3
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.MINIO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          AWS_ENDPOINT: http://127.0.0.1:9000
          AWS_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          AWS_REGION: us-east-1
      - name: Install dependencies
        run: |
          npm ci
